?pbeta
pbeta(0.75, 1, 1)
(1*1/6) + (2*1/6) + (3*1/6) + (4*1/6) + (5*1/6) + (6*1/6)
dbinom(4, 5, 0.5;
dbinom(4, 5, 0.5)
dbinom(5, 5, 0.5)
dbinom(4, 5, 0.5) + dbinom(5, 5, 0.5)
dbinom(4, 5, 0.5) + dbinom(5, 5, 0.5) *100
(dbinom(4, 5, 0.5) + dbinom(5, 5, 0.5)) *100
sum(dpois(0:10, 5)
)
choose(9, 3)
ppois(10, 3*5)
ppois(10, 5)
sum(dpois(0:10, 15)
)
a = .75*.3
b = ((1-.52) * (1-.3))
a/(a+b)
a/(a+b)*100
?choose
choose(10,6) * (0.5^6) * (0.5^4)
(choose(5, 4)) * (.5^4) * (.5^1)
(choose(5, 4) * (.5^4) * (.5^1)) + (choose(5, 5) * (.5^5) * (.5^0))
pbinom(4:5, 5, 0.5)
pbinom(5:6, 5, 0.5)
pbinom(4:5, 10, 0.5)
pbinom(4, 10, 0.5)
sum(dbinom(70:245, 245, 0.25))
pbinom(69, 245, 0.25, lower.tail=F)
qnorm (70, 80, 10)
qnorm (7, 80, 10)
?qnorm
pnorm (70, 80, 10)
1 - pnorm (70, 80, 10)
pnorm (70, 80, 10)
pnorm (70, 80, 10)  * 100
qnorm(.95, 1100, 75)
pnorm (70, 80, 10)  * 100
pnorm(14,mean=15,sd=10)-pnorm(16,mean=15,sd=10)
pnorm(16,mean=15,sd=10)-pnorm(14,mean=15,sd=10)
(pnorm(16,mean=15,sd=10)-pnorm(14,mean=15,sd=10)) * 100
ppois(10, 5*3)
ppois(10, 5*3)*100
a/(a+b)
?pbeta
(1*0.1) + (2*0.2) + (3*0.3) + (4*0.4)
pnorm (70, 80, 10, lower.tail=T)
pnorm (70, 80, 10)
pnorm (70, 80, 10)*100
16%
pnorm (70, mean=80, sd=10, lower.tail=T)
qnorm(0.95,mean=1100,sd=75)
n = 100
df = n - 1
s = 4
mean = 12
lower <- mean - qt(0.95, df) * s / sqrt(n)
upper <- mean + qt(0.95, df) * s / sqrt(n)
c(lower, upper)
?binom.test
x = 3
n = 4
p = 0.5
binom.test(x, n, p, alternative="greater", conf.level = 0.95)
ppois(9, 1/100, lower.tail=F)*100
?ppois
ppois(10/1878, 1/100, lower.tail=T)*100
ppois(10/1878, 1/100, lower.tail=T)
ppois(10/1787, 1/100, lower.tail=T)
?t.tesy
?t.test
n1 = 9 # treated
n2 = 9 # placebo
m1 = -3 # treated
m2 = 1 # placebo
var1 = 1.5^2 # treated
var2 = 1.8^2 # placebo
interval <- function (n1, n2, m1, m2, var1, var2) {
difference = m1 - m2
MSE = (var1 + var2)/2 # (Mean Squared Error)
std_error = sqrt((2 * MSE)/n1)
df = (n1 - 1) + (n2 - 1)
t_95_df = qt(0.975, df) # http://onlinestatbook.com/2/calculators/inverse_t_dist.html
lower = difference - t_95_df * std_error
upper = difference + t_95_df * std_error
c(lower, upper)
}
interval(n1, n2, m1, m2, var1, var2)
?pt
?power.t.test
n = 100
d = 0.01
sd = 0.04
power.t.test(n, d, sd, sig.level=0.05, type="one.sided")
n = 100
d = 0.01
sd = 0.04
power.t.test(n, d, sd, sig.level=0.05, type="one.sample",
alt="one.sided")$power
d = 0.01
sd = 0.04
power.t.test(power = 0.9, d, sd, sig.level=0.05, type="one.sample",
alt="one.sided")$n
d = 0.01
sd = 0.04
power.t.test(power = 0.9, d, sd, type="one.sample",
alt="one.sided")$n
d = 0.01
sd = 0.04
power.t.test(power = 0.9, delta = d, sd=sd, type="one.sample",
alt="one.sided")$n
library(shinyapps)
install.packages(c("BMA", "car", "caret", "caTools", "evaluate", "ggplot2", "gss", "knitr", "markdown", "MASS", "memoise", "multcomp", "mvtnorm", "party", "Rcpp", "reshape", "reshape2", "rgeos", "rjson", "RJSONIO", "robustbase", "scales", "sem", "statmod", "swirl"))
setwd("~/Documents/Data Analysis/R/Slidify")
library(slidify)
author(Overview)
author("Overview")
